/*
 * pmic_34708.h 
 *
 * Copyright 2011 Amazon Technologies, Inc. All Rights Reserved.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#ifndef PMIC_34708_H
#define PMIC_34708_H

enum {
	MC34708_REG_INT_STATUS0 = 0,
	MC34708_REG_INT_MASK0,
	MC34708_REG_INT_SENSE0,
	MC34708_REG_INT_STATUS1,
	MC34708_REG_INT_MASK1,
	MC34708_REG_INT_SENSE1,
	MC34708_REG_POWER_UP_MODE_SENSE,
	MC34708_REG_IDENTIFICATION,
	MC34708_REG_REGULATOR_FAULT_SENSE,
	MC34708_REG_ACC0,
	MC34708_REG_ACC1,
	MC34708_REG_UNUSED0,
	MC34708_REG_UNUSED1,
	MC34708_REG_POWER_CTL0,
	MC34708_REG_POWER_CTL1,
	MC34708_REG_POWER_CTL2,
	MC34708_REG_MEM_A,
	MC34708_REG_MEM_B,
	MC34708_REG_MEM_C,
	MC34708_REG_MEM_D,
	MC34708_REG_RTC_TIME,
	MC34708_REG_RTC_ALARM,
	MC34708_REG_RTC_DAY,
	MC34708_REG_RTC_DAY_ALARM,
	MC34708_REG_SW1AB,
	MC34708_REG_SW2_3,
	MC34708_REG_SW4AB,
	MC34708_REG_SW5,
	MC34708_REG_SW_OP_MODE_1_2,
	MC34708_REG_SW_OP_MODE_3_4_5,
	MC34708_REG_REGULATOR_SETTING0,
	MC34708_REG_SWBST_CTL,
	MC34708_REG_REGULATOR_MODE0,
	MC34708_REG_GPIOLV0_CTL,
	MC34708_REG_GPIOLV1_CTL,
	MC34708_REG_GPIOLV2_CTL,
	MC34708_REG_GPIOLV3_CTL,
	MC34708_REG_USB_TIMING,
	MC34708_REG_USB_BUTTON,
	MC34708_REG_USB_CTL,
	MC34708_REG_USB_DEVICE_TYPE,
	MC34708_REG_UNUSED2,
	MC34708_REG_UNUSED3,
	MC34708_REG_ADC0,
	MC34708_REG_ADC1,
	MC34708_REG_ADC2,
	MC34708_REG_ADC3,
	MC34708_REG_ADC4,
	MC34708_REG_ADC5,
	MC34708_REG_ADC6,
	MC34708_REG_ADC7,
	MC34708_REG_BATTERY_PROFILE,
	MC34708_REG_CHARGER_DEBOUNCE,
	MC34708_REG_CHARGER_SOURCE,
	MC34708_REG_CHARGER_LED_CTL,
	MC34708_REG_PWM_CTL,
	MC34708_REG_UNUSED4,
	MC34708_REG_UNUSED5,
	MC34708_REG_UNUSED6,
	MC34708_REG_UNUSED7,
	MC34708_REG_UNUSED8,
	MC34708_REG_UNUSED9,
	MC34708_REG_UNUSED10,
	MC34708_REG_UNUSED11,
};

#define BITFMASK(field) (((1U << (field ## _WID)) - 1) << (field ## _LSH))
#define BITFVAL(field, val) ((val) << (field ## _LSH))

#define PMIC_ALL_BITS		(0xFFFFFF)

/* INTERRUPT STATUS 0 */
#define INT0_ADCDONEI		(1<<0)

/* INTERRUPT SENSE 0 */
#define INT0_USBDETS         	(1<<3)

/* INTERRUPT SENSE 1 */
#define INT1_TOD		(1<<1)

/* POWER CONTROL 0 */
#define POWER_CTL0_USEROFFSPI	(1<<3)

/* POWER CONTROL 2 */
#define POWER_CTL2_WDIRESET	(1<<12)

/* RTC */
#define RTC_TIME_MASK		(0x1FFFF)
#define RTC_DAY_MASK		(0x7FFF)

#define USB_DEVICE_TYPE_FACTORY (1<<16)

/* USB CONTROL */
#define MSW_LSH 1
#define MSW_WID 1
#define SW_HOLD_LSH 12
#define SW_HOLD_WID 1
#define MUSBCHRG_LSH 13
#define MUSBCHRG_WID 2

/* ADC */
#define ADC_ADEN		(1<<0)
#define ADC_ADSTART		(1<<1)

#define ADC_ADSEL0_OFFSET	0

#define ADC_ADRESULT0_MASK	0xFFC
#define ADC_ADRESULT0_OFFSET	2

#define ADC_BATTERY_VOLTAGE	0

/* BATTERY PROFILE */
#define VBAT_TRKL_LSH 0
#define VBAT_TRKL_WID 2
#define CHRITERMEN_LSH 2
#define CHRITERMEN_WID 1
#define CHREN_LSH 3
#define CHREN_WID 1
#define LOWBATT_LSH 4
#define LOWBATT_WID 2
#define CHRCV_LSH 6
#define CHRCV_WID 6
#define CHRCC_LSH 12
#define CHRCC_WID 4
#define CHRITERM_LSH 16
#define CHRITERM_WID 3
#define EOCBUCKEN_LSH 23
#define EOCBUCKEN_WID 1

/* CHARGER DEBOUNCE */
#define ILIM1P5_LSH 20
#define ILIM1P5_WID 1
#define BATTISOEN_LSH 23
#define BATTISOEN_WID 1

/* CHARGER SOURCE */
#define AUXWEAKEN_LSH 22
#define AUXWEAKEN_WID 1
#define VBUSWEAKEN_LSH 23
#define VBUSWEAKEN_WID 1


#endif
